PROCEDURE "GET_HS_CODE" (IN "SHOW_ALL" BOOLEAN,IN ID BIGINT, IN "FILTER_PARAMS" NCLOB,IN "PAGE_NUMBER" INTEGER,
IN "PAGE_SIZE" INTEGER, IN "SORTING_KEY" NVARCHAR(100), IN "ORDER_BY" NVARCHAR(100), IN "STRING_TYPE" BOOLEAN) AS 
BEGIN
  DECLARE HS_CODE_ID BIGINT;
  DECLARE HS_CODE_NAME NVARCHAR(256);
  DECLARE HS_CODE_COLLECTION NVARCHAR(256);
  DECLARE CODE DOUBLE;
  DECLARE DESCRIPTION NVARCHAR(256);
  DECLARE CREATED_BY NVARCHAR(256);
  DECLARE UPDATED_BY NVARCHAR(256);
  DECLARE CREATED_ON_START DATE;
  DECLARE CREATED_ON_END DATE;
  DECLARE UPDATED_ON_START DATE;
  DECLARE UPDATED_ON_END DATE;
  DECLARE QUERY NVARCHAR(2000) :='';
  DECLARE START_INDEX INTEGER := (:PAGE_NUMBER - 1) * :PAGE_SIZE;
  DECLARE "TOTAL_RECORDS" INTEGER :=0;
  DECLARE temp_hs_code NVARCHAR(5000);
  DECLARE temp_sort NVARCHAR(1000);
  DECLARE HS_CODE_STATUS_COLLECTION NCLOB;

  temp_hs_code := 'SELECT * FROM "hs_code"';
 
  EXECUTE IMMEDIATE 'SELECT COUNT(*) FROM (' || :temp_hs_code || ')' INTO "TOTAL_RECORDS";
  
  PAGE_SIZE = CASE WHEN PAGE_SIZE =0 THEN :TOTAL_RECORDS ELSE  PAGE_SIZE END;

  IF STRING_TYPE = TRUE THEN
    temp_sort := ' LOWER("'||:SORTING_KEY||'") '||:ORDER_BY;
  ELSE
    temp_sort :=' "id" '||:ORDER_BY;
  END IF;

  IF SHOW_ALL = TRUE THEN -- to show all the records without filter
      QUERY := 'SELECT '|| :TOTAL_RECORDS ||' "recordCount",0 "inserted",0"updated",* FROM (' || :temp_hs_code || ') AS temp_table ORDER BY'||:temp_sort||' LIMIT '||:PAGE_SIZE||' OFFSET '||:START_INDEX;
      EXECUTE IMMEDIATE :QUERY;
  ELSE
    IF (ID > 0) THEN --for id filter
      SELECT  0 "recordCount","id","name","code","description","createdBy","updatedBy","createdOn","updatedOn","status" FROM "hs_code"  WHERE "id" = ID ORDER BY "id" DESC;
    ELSE -- for criteria based filter
      IF FILTER_PARAMS != '' THEN
        SELECT JSON_VALUE(:FILTER_PARAMS, '$.id') INTO HS_CODE_ID FROM DUMMY;
        SELECT JSON_VALUE(:FILTER_PARAMS, '$.name') INTO "HS_CODE_NAME" FROM DUMMY;
        SELECT JSON_VALUE(:FILTER_PARAMS, '$.code') INTO "CODE" FROM DUMMY;
        SELECT JSON_VALUE(:FILTER_PARAMS, '$.hsCodeCollection') INTO "HS_CODE_COLLECTION" FROM DUMMY;
        SELECT JSON_VALUE(:FILTER_PARAMS, '$.description') INTO "DESCRIPTION" FROM DUMMY;
        SELECT JSON_VALUE(:FILTER_PARAMS, '$.createdBy') INTO CREATED_BY FROM DUMMY;
        SELECT JSON_VALUE(:FILTER_PARAMS, '$.updatedBy') INTO UPDATED_BY FROM DUMMY;
        SELECT JSON_VALUE(:FILTER_PARAMS, '$.createdOnStart') INTO CREATED_ON_START FROM DUMMY;
        SELECT JSON_VALUE(:FILTER_PARAMS, '$.createdOnEnd') INTO CREATED_ON_END FROM DUMMY;
        SELECT JSON_VALUE(:FILTER_PARAMS, '$.updatedOnStart') INTO UPDATED_ON_START FROM DUMMY;
        SELECT JSON_VALUE(:FILTER_PARAMS, '$.updatedOnEnd') INTO UPDATED_ON_END FROM DUMMY;
        SELECT JSON_VALUE(:FILTER_PARAMS, '$.statuses') INTO "HS_CODE_STATUS_COLLECTION" FROM DUMMY;

    	temp_hs_code_status_collection =   SELECT * FROM FUNC_SPLIT_VALUES_TO_TABLE(:HS_CODE_STATUS_COLLECTION); 

        IF :HS_CODE_NAME != ''  THEN  -- for criterials
          QUERY = CASE WHEN QUERY = '' THEN '  LOWER("name") like ''%' ||  LOWER(:HS_CODE_NAME) || '%'''  ELSE ' AND   LOWER("name") like ''%' ||  LOWER(:HS_CODE_NAME) || '%''' END;
        END IF;

	     IF :CODE > 0  THEN  -- for criterials
          QUERY = QUERY || CASE WHEN QUERY = '' THEN ' "code" =' || :CODE   ELSE ' AND  "code" =' || :CODE   END;
        END IF;

        IF :HS_CODE_ID > 0  THEN  -- for criterials
          QUERY = QUERY || CASE WHEN QUERY = '' THEN ' "id" =' || :HS_CODE_ID   ELSE ' AND  "id" =' || :HS_CODE_ID   END;
        END IF;
        
        IF EXISTS (SELECT * FROM :temp_hs_code_status_collection) THEN
		  QUERY = QUERY || CASE WHEN QUERY = '' THEN ' "status"  IN ('|| (SELECT  LEFT(STRING_AGG(CONCAT("out_value", ','), ''), LENGTH(STRING_AGG(CONCAT("out_value", ','), '')) - 1) FROM :temp_hs_code_status_collection) || ')'  ELSE ' AND  "status"  IN (' || (SELECT LEFT(STRING_AGG(CONCAT("out_value", ','), ''), LENGTH(STRING_AGG(CONCAT("out_value", ','), '')) - 1) FROM :temp_hs_code_status_collection) || ')' END;
		 END IF;
		 
       IF HS_CODE_COLLECTION != '()' AND HS_CODE_COLLECTION != '' THEN 
          QUERY := QUERY || CASE WHEN QUERY = '' THEN ' "code" IN ' || HS_CODE_COLLECTION ELSE ' AND "code" IN ' || HS_CODE_COLLECTION END;
        END IF;

		IF :CREATED_BY != ''  THEN  -- for criterials
          QUERY =QUERY || CASE WHEN QUERY = '' THEN '  LOWER("createdBy") like ''%' ||  LOWER(:CREATED_BY) || '%'''  ELSE ' AND   LOWER("createdBy") like ''%' ||  LOWER(:CREATED_BY) || '%''' END;
        END IF;
        
		IF :CREATED_ON_START IS NOT NULL AND :CREATED_ON_END IS NOT NULL AND :CREATED_ON_START !='' AND :CREATED_ON_END != '' THEN  -- for criterials
          QUERY = QUERY || CASE WHEN QUERY = '' THEN '"createdOn" BETWEEN :CREATED_ON_START AND :CREATED_ON_END'  ELSE ' AND "createdOn" BETWEEN :CREATED_ON_START AND :CREATED_ON_END' END;
        END IF;
        
        IF :UPDATED_ON_START IS NOT NULL AND :UPDATED_ON_END IS NOT NULL AND :UPDATED_ON_START !='' AND :UPDATED_ON_END != '' THEN  -- for criterials
           QUERY = QUERY || CASE WHEN QUERY = '' THEN '"updatedOn" BETWEEN :UPDATED_ON_START AND :UPDATED_ON_END'  ELSE ' AND "updatedOn" BETWEEN :UPDATED_ON_START AND :UPDATED_ON_END' END;
        END IF;
        
        IF :UPDATED_BY != ''  THEN  -- for criterials
          QUERY =QUERY || CASE WHEN QUERY = '' THEN '  LOWER("updatedBy") like ''%' ||  LOWER(:UPDATED_BY) || '%'''  ELSE ' AND   LOWER("updatedBy") like ''%' ||  LOWER(:UPDATED_BY) || '%''' END;
        END IF;
        
        IF(QUERY = '') THEN

            QUERY := 'SELECT '|| :TOTAL_RECORDS ||' "recordCount",0 "inserted",0"updated",* FROM "hs_code" ORDER BY '||:temp_sort|| ' LIMIT '||:PAGE_SIZE||' OFFSET '||:START_INDEX;
            EXECUTE IMMEDIATE :QUERY;

        ELSE
      IF :CREATED_ON_START IS NOT NULL AND :CREATED_ON_END IS NOT NULL AND :CREATED_ON_START !=''AND :CREATED_ON_END !=''OR :UPDATED_ON_START IS NOT NULL AND :UPDATED_ON_END IS NOT NULL  AND :UPDATED_ON_START !=''AND :UPDATED_ON_END !=''
			THEN  -- for criterials
           EXECUTE IMMEDIATE 'SELECT count(*)  FROM ('|| :temp_hs_code ||') WHERE '|| QUERY INTO "TOTAL_RECORDS" USING :CREATED_ON_START, :CREATED_ON_END, :UPDATED_ON_START, :UPDATED_ON_END;

            QUERY = ' SELECT '|| :TOTAL_RECORDS ||' "recordCount",0 "inserted",0"updated","id","name","code","description","createdBy","updatedBy","createdOn","updatedOn","status" FROM "hs_code"  WHERE ' || QUERY || ' ORDER BY ' ||:temp_sort;
            EXECUTE IMMEDIATE :QUERY || ' LIMIT :PAGE_SIZE OFFSET :START_INDEX' USING :PAGE_SIZE, :START_INDEX, :CREATED_ON_START, :CREATED_ON_END, :UPDATED_ON_START, :UPDATED_ON_END;
		ELSE 
			EXECUTE IMMEDIATE 'SELECT count(*)  FROM "hs_code" WHERE '|| QUERY INTO "TOTAL_RECORDS";
			QUERY = ' SELECT '|| :TOTAL_RECORDS ||' "recordCount",0 "inserted",0"updated","id","name","code","description","createdBy","updatedBy","createdOn","updatedOn","status" FROM "hs_code"  WHERE ' || QUERY || ' ORDER BY ' ||:temp_sort;
            EXECUTE IMMEDIATE :QUERY || ' LIMIT :PAGE_SIZE OFFSET :START_INDEX' USING :PAGE_SIZE, :START_INDEX;   
          END IF;
        END IF;
      END IF;
    END IF; 
END IF;
--SELECT  :QUERY FROM DUMMY;
 
END